# Import the json module
import json

# Open the json file and load the data
json_file = open('data.json', 'r')
data = json.load(json_file)

# Primary genres to exclude during summation
exclude_primary_genres = ['Sport', 'Crime', 'Fantasy', 'Musical','musical','family', 'Family', 'fantasy', 'Adventure','adventure', 'Biography','biography', 'Romance', 'Animation','animation','drama', 'Horror','Drama', 'Comedy','action', 'Action']

# Create a dictionary to store the sum of the attributes for each primary genre
sum_dict = {}

# Loop through each item in the data
for item in data:
    # Get the primary genre
    primary_genre = item['Primary Genre']

    # Skip items with excluded primary genres
    if primary_genre in exclude_primary_genres:
        continue

    # If the primary genre is not in the sum_dict, add it
    if primary_genre not in sum_dict:
        sum_dict[primary_genre] = {'Budget collect': 0, 'Budget ($million)': 0, 'Worldwide Gross ($million)': 0}

    # Sum the attributes for the current primary genre
    for attribute in ['Budget collect', 'Budget ($million)', 'Worldwide Gross ($million)']:
        if item[attribute] != '-' and item[attribute] is not None:
            if '%' in item[attribute]:
                # Remove the percentage sign and convert to float
                percentage = float(item[attribute].replace('%', ''))
                # Convert the percentage to a decimal
                sum_dict[primary_genre][attribute] += percentage / 100
            else:
                sum_dict[primary_genre][attribute] += float(item[attribute].replace(',', ''))

# Close the json file
json_file.close()

# Print the sum dictionary
print(sum_dict)

# Convert the sum dictionary to a list of dictionaries
result_list = [{'Primary Genre': genre, **attributes} for genre, attributes in sum_dict.items()]

# Print the merged and summed data
print(result_list)

# Import the json module
import json

# Open a new json file and write the data
with open('average_data.json', 'w') as json_file:
    json.dump(result_list, json_file)
